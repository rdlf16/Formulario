{"version":3,"sources":["componentes/formulario/Formulario.jsx","App.js","index.js"],"names":["Formulario","aoEnviar","validaCPF","validaNome","validaSobrenome","useState","nome","setNome","sobrenome","setSobrenome","cpf","setCpf","promocao","setPromocao","novidade","setNovidade","valido","texto","erros","setErros","errosNome","setErrosNome","errosSobrenome","setErrosSobrenome","onSubmit","event","preventDefault","TextField","value","onChange","target","onBlur","error","helperText","id","label","variant","fullWidth","margin","Box","textAlign","FormControlLabel","control","Switch","checked","name","color","Button","type","dados","console","log","length","App","Container","maxWidth","component","Typography","align","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kSAuGeA,MApGf,YAAyE,IAApDC,EAAmD,EAAnDA,SAAUC,EAAyC,EAAzCA,UAAWC,EAA8B,EAA9BA,WAAYC,EAAkB,EAAlBA,gBAClD,EAAwBC,mBAAS,IAAjC,mBAAOC,EAAP,KAAaC,EAAb,KACA,EAAkCF,mBAAS,IAA3C,mBAAOG,EAAP,KAAkBC,EAAlB,KACA,EAAsBJ,mBAAS,IAA/B,mBAAOK,EAAP,KAAYC,EAAZ,KACA,EAAgCN,oBAAS,GAAzC,mBAAOO,EAAP,KAAiBC,EAAjB,KACA,EAAgCR,oBAAS,GAAzC,mBAAOS,EAAP,KAAiBC,EAAjB,KACA,EAA0BV,mBAAS,CAACK,IAAK,CAACM,QAAQ,EAAMC,MAAO,MAA/D,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAAkCd,mBAAS,CAACC,KAAM,CAACU,QAAQ,EAAMC,MAAO,MAAxE,mBAAOG,EAAP,KAAkBC,EAAlB,KACA,EAA4ChB,mBAAS,CAACG,UAAW,CAACQ,QAAQ,EAAMC,MAAO,MAAvF,mBAAOK,EAAP,KAAuBC,EAAvB,KAEA,OACI,uBAAMC,SAAU,SAACC,GACbA,EAAMC,iBACNzB,EAAS,CAACK,OAAME,YAAWE,MAAKE,WAAUE,cAF9C,UAII,cAACa,EAAA,EAAD,CACIC,MAAOtB,EACPuB,SAAU,SAACJ,GACPlB,EAAQkB,EAAMK,OAAOF,QAEzBG,OAAQ,SAACN,GACLJ,EAAa,CAACf,KAAMH,EAAWG,MAEnC0B,OAAQZ,EAAUd,KAAKU,OACvBiB,WAAYb,EAAUd,KAAKW,MAC3BiB,GAAG,OACHC,MAAM,OACNC,QAAQ,WACRC,WAAS,EAACC,OAAO,WAErB,cAACX,EAAA,EAAD,CACIC,MAAOpB,EACPqB,SAAU,SAACJ,GACPhB,EAAagB,EAAMK,OAAOF,QAE9BG,OAAQ,SAACN,GACLF,EAAkB,CAACf,UAAWJ,EAAgBI,MAElDwB,OAAQV,EAAed,UAAUQ,OACjCiB,WAAYX,EAAed,UAAUS,MACrCiB,GAAG,YACHC,MAAM,YACNC,QAAQ,WACRC,WAAS,EACTC,OAAO,WAEX,cAACX,EAAA,EAAD,CACIC,MAAOlB,EACPmB,SAAU,SAACJ,GACPd,EAAOc,EAAMK,OAAOF,QAExBG,OAAQ,SAACN,GACLN,EAAS,CAACT,IAAKR,EAAUQ,MAE7BsB,OAAQd,EAAMR,IAAIM,OAClBiB,WAAYf,EAAMR,IAAIO,MACtBiB,GAAG,MACHC,MAAM,MACNC,QAAQ,WACRC,WAAS,EACTC,OAAO,WAEf,eAACC,EAAA,EAAD,CAAKC,UAAU,SAASF,OAAQ,EAAhC,UACI,cAACG,EAAA,EAAD,CACIC,QACI,cAACC,EAAA,EAAD,CACIC,QAAShC,EACTiB,SAAU,SAACJ,GACPZ,EAAYY,EAAMK,OAAOc,UAE7BC,KAAK,WAELC,MAAM,YACdX,MAAM,oBAGV,cAACM,EAAA,EAAD,CACIC,QACI,cAACC,EAAA,EAAD,CACIC,QAAS9B,EACTe,SAAU,SAACJ,GACPV,EAAYU,EAAMK,OAAOc,UAE7BC,KAAK,YAELC,MAAM,YACdX,MAAM,iBAGV,cAACI,EAAA,EAAD,CAAKC,UAAU,SAASF,OAAQ,EAAhC,SACI,cAACS,EAAA,EAAD,CACIC,KAAK,SACLZ,QAAQ,YACRU,MAAM,UAHV,6B,+BC5EhB,SAAS7C,EAASgD,GAChBC,QAAQC,IAAIF,GAGd,SAAS/C,EAAUQ,GACjB,OAAkB,KAAfA,EAAI0C,OACE,CAACpC,QAAQ,EAAOC,MAAO,+BAEvB,CAACD,QAAQ,EAAMC,MAAO,IAIjC,SAASd,EAAWG,GAClB,MAAY,KAATA,EACM,CAACU,QAAQ,EAAOC,MAAO,mBAEvB,CAACD,QAAQ,EAAMC,MAAO,IAIjC,SAASb,EAAgBI,GACvB,MAAiB,KAAdA,EACM,CAACQ,QAAQ,EAAOC,MAAO,wBAEvB,CAACD,QAAQ,EAAMC,MAAO,IAIlBoC,M,4JAtCb,WACE,OACE,eAACC,EAAA,EAAD,CAAWC,SAAS,KAAKC,UAAU,UAAnC,UACE,cAACC,EAAA,EAAD,CAAYC,MAAM,SAAStB,QAAQ,KAAKoB,UAAU,KAAlD,uCACF,cAAC,EAAD,CAAYvD,SAAUA,EAAUC,UAAWA,EAAWC,WAAYA,EAAYC,gBAAiBA,W,GALnFuD,aCDlBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.9f45c660.chunk.js","sourcesContent":["import React, {useState} from 'react';\r\nimport { Button, Switch, TextField, FormControlLabel, Box } from '@material-ui/core';\r\n\r\nfunction Formulario({aoEnviar, validaCPF, validaNome, validaSobrenome}) {\r\n    const [nome, setNome] = useState('')\r\n    const [sobrenome, setSobrenome] = useState('')\r\n    const [cpf, setCpf] = useState('')\r\n    const [promocao, setPromocao] = useState(true)\r\n    const [novidade, setNovidade] = useState(true)\r\n    const [erros, setErros] = useState({cpf: {valido: true, texto: ''}})\r\n    const [errosNome, setErrosNome] = useState({nome: {valido: true, texto: ''}})\r\n    const [errosSobrenome, setErrosSobrenome] = useState({sobrenome: {valido: true, texto: ''}})\r\n\r\n    return (\r\n        <form onSubmit={(event) => {\r\n            event.preventDefault();\r\n            aoEnviar({nome, sobrenome, cpf, promocao, novidade})\r\n        }}>\r\n            <TextField \r\n                value={nome}\r\n                onChange={(event) => {\r\n                    setNome(event.target.value);\r\n                }}\r\n                onBlur={(event) => {\r\n                    setErrosNome({nome: validaNome(nome)})\r\n                }}\r\n                error={!errosNome.nome.valido}\r\n                helperText={errosNome.nome.texto}\r\n                id=\"nome\" \r\n                label=\"Nome\" \r\n                variant=\"outlined\" \r\n                fullWidth margin=\"normal\" />\r\n\r\n            <TextField \r\n                value={sobrenome}\r\n                onChange={(event)=> {\r\n                    setSobrenome(event.target.value)\r\n                }}\r\n                onBlur={(event) => {\r\n                    setErrosSobrenome({sobrenome: validaSobrenome(sobrenome)})\r\n                }}\r\n                error={!errosSobrenome.sobrenome.valido}\r\n                helperText={errosSobrenome.sobrenome.texto}\r\n                id=\"sobrenome\" \r\n                label=\"Sobrenome\" \r\n                variant=\"outlined\" \r\n                fullWidth \r\n                margin=\"normal\" />\r\n\r\n            <TextField\r\n                value={cpf} \r\n                onChange={(event)=> {\r\n                    setCpf(event.target.value)\r\n                }}\r\n                onBlur={(event) => {\r\n                    setErros({cpf: validaCPF(cpf)})\r\n                }}\r\n                error={!erros.cpf.valido}\r\n                helperText={erros.cpf.texto}\r\n                id=\"cpf\" \r\n                label=\"CPF\" \r\n                variant=\"outlined\" \r\n                fullWidth \r\n                margin=\"normal\" />\r\n\r\n        <Box textAlign=\"center\" margin={1}>\r\n            <FormControlLabel\r\n                control={\r\n                    <Switch \r\n                        checked={promocao}\r\n                        onChange={(event) => {\r\n                            setPromocao(event.target.checked)\r\n                        }}\r\n                        name=\"promocao\" \r\n                        //defaultChecked={true}\r\n                        color=\"primary\" />}\r\n                label=\"Promoções\"\r\n            />\r\n\r\n            <FormControlLabel\r\n                control={\r\n                    <Switch \r\n                        checked={novidade}\r\n                        onChange={(event) => {\r\n                            setNovidade(event.target.checked)\r\n                        }}\r\n                        name=\"novidades\" \r\n                        //defaultChecked={true} \r\n                        color=\"primary\" />}\r\n                label=\"Novidades\"\r\n            />\r\n        </Box>\r\n            <Box textAlign=\"center\" margin={3}>\r\n                <Button\r\n                    type=\"submit\" \r\n                    variant=\"contained\" \r\n                    color=\"primary\">Cadastrar\r\n                </Button>\r\n            </Box>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default Formulario;","import React, { Component } from 'react';\nimport Formulario from './componentes/formulario/Formulario';\nimport './App.css';\nimport '../node_modules/@fontsource/roboto';\nimport { Container, Typography } from '@material-ui/core';\n\nclass App extends Component {\n  render() { \n    return (\n      <Container maxWidth=\"sm\" component=\"article\">\n        <Typography align=\"center\" variant=\"h3\" component=\"h1\">Formulário de cadastro</Typography>\n      <Formulario aoEnviar={aoEnviar} validaCPF={validaCPF} validaNome={validaNome} validaSobrenome={validaSobrenome}/>\n      </Container>\n    );\n  }\n}\n\nfunction aoEnviar(dados) {\n  console.log(dados)\n}\n\nfunction validaCPF(cpf) {\n  if(cpf.length !== 11) {\n    return {valido: false, texto: \"CPF precisa ter 11 digitos!\"}\n  } else {\n    return {valido: true, texto: \"\"}\n  }\n}\n\nfunction validaNome(nome) {\n  if(nome === \"\") {\n    return {valido: false, texto: \"Digite um nome!\"}\n  } else {\n    return {valido: true, texto: \"\"}\n  }\n}\n\nfunction validaSobrenome(sobrenome) {\n  if(sobrenome === \"\") {\n    return {valido: false, texto: \"Digite um sobrenome!\"}\n  } else {\n    return {valido: true, texto: \"\"}\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}